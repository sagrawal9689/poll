{"version":3,"sources":["screens/HomeScreen.js","screens/InfoScreen.js","socket.js","screens/ResultScreen.js","screens/VotingScreen.js","App.js","index.js"],"names":["HomeScreen","history","useState","question","setQuestion","value","fields","setFields","alert","setAlert","style","textAlign","fontSize","color","className","Form","Group","Label","Control","as","rows","onChange","e","target","placeholder","map","field","idx","display","type","i","event","values","handleChange","Button","onClick","splice","handleRemove","Alert","variant","push","handleAdd","createPoll","a","axios","post","options","data","_id","console","log","trim","length","InfoScreen","match","Container","ListGroup","Item","InputGroup","Text","id","FormControl","window","location","origin","params","to","socket","io","ResultScreen","loading","setLoading","setOptions","totalVotes","setTotalVotes","useEffect","fetchData","get","reduce","b","count","emit","incrementCount","optionId","prevOpt","newOption","findIndex","ele","prevCount","on","off","justifyContent","marginTop","Spinner","animation","width","height","flexDirection","alignItems","margin","opt","Card","Body","Title","Math","floor","role","VotingScreen","selectedOption","setSelectedOption","handleOnchange","onSubmit","preventDefault","body","pollId","patch","then","response","catch","error","marginRight","name","htmlFor","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89aa5457.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Alert, Button, Form } from 'react-bootstrap'\r\n\r\nconst HomeScreen = ({ history }) => {\r\n\r\n    function handleChange(i, event) {\r\n      const values = [...fields];\r\n      values[i].value = event.target.value;\r\n      setFields(values);\r\n    }\r\n\r\n    function handleAdd() {\r\n      const values = [...fields];\r\n      values.push({ value: null });\r\n      setFields(values);\r\n\r\n      // console.log(values)\r\n    }\r\n\r\n    function handleRemove(i) {\r\n      const values = [...fields];\r\n      values.splice(i, 1);\r\n      setFields(values);\r\n    }\r\n\r\n    function handelQuestionChange(e) {\r\n        setQuestion(e.target.value)\r\n    }\r\n\r\n    \r\n    const [question, setQuestion]= useState(\"\"); \r\n    const [fields, setFields] = useState([{ value: null }]);\r\n    const [ alert, setAlert ]= useState(null);\r\n\r\n    function submitPoll(e) {\r\n  \r\n          const createPoll=async ()=>{\r\n\r\n            try{\r\n              const {data}= await axios.post('/api/poll',{ question, options: fields })\r\n              history.push(`/info/${data._id}`)\r\n              \r\n            }\r\n            catch(e)\r\n            {\r\n              console.log(e)\r\n            }\r\n          }\r\n\r\n          if(!question || question.trim()===\"\")\r\n          {\r\n            setAlert('please provide a question');\r\n            return;\r\n          }\r\n\r\n          if(fields.length===0 || (fields.length===1 && fields[0].value===null))\r\n          {\r\n            setAlert('please provide an option');\r\n            return;\r\n          }\r\n\r\n          createPoll();\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        \r\n        <div style={{ textAlign: \"center\", fontSize: \"57px\" , color: \"white\"}} className=\"m-4\">\r\n          Quick Poll\r\n        <div style={{ textAlign: \"center\", fontSize: \"20px\" }}>Create realtime Polls Quickly.</div>\r\n        </div>\r\n\r\n        <main>\r\n        <Form className=\"formMain\">\r\n            <Form.Group>\r\n              <Form.Label>Poll Question</Form.Label>\r\n              <Form.Control as=\"textarea\" rows={3} value={question} onChange={handelQuestionChange} placeholder=\"what is your favourite food?\"/>\r\n            </Form.Group>\r\n            {fields.map((field, idx) => {\r\n            return (\r\n              <Form.Group key={`${field}-${idx}`} className=\"my-2\">\r\n                  \r\n                <Form.Label>{`Option ${idx+1}`}</Form.Label>\r\n                <div style={{display: \"flex\"}}>\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder={`Option ${idx+1}`}\r\n                      onChange={e => handleChange(idx, e)}\r\n                    />\r\n                    <Button className=\"btn-danger mx-3\" onClick={() => handleRemove(idx)}>\r\n                      X\r\n                    </Button>\r\n                </div>\r\n              </Form.Group>\r\n            );\r\n          })}\r\n          {\r\n            alert && <Alert className='my-3' variant='warning'>\r\n            {alert}\r\n            </Alert>\r\n          }\r\n          <Button type=\"button\" onClick={() => handleAdd()} className=\"my-4 btn-lg\">Add another Option</Button>\r\n          <hr></hr>\r\n          <Button className=\"btn-lg btn-info\" onClick={submitPoll}>Create your Poll</Button>\r\n        </Form>\r\n        </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React from 'react'\r\nimport { Alert, Container, FormControl, InputGroup, ListGroup } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst InfoScreen = ({match}) => {\r\n    return (\r\n        <Container>\r\n            <Alert className=\"my-3\" variant=\"success\">\r\n              Your Poll was created sucessfully.\r\n            </Alert>\r\n            <ListGroup variant=\"primary\">\r\n              <ListGroup.Item className=\"my-4 p-4\"><InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"basic-addon1\">Link for voting</InputGroup.Text>\r\n                <FormControl\r\n                  placeholder=\"Link\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  value={`${window.location.origin}/vote/${match.params.id}`}\r\n                />\r\n              </InputGroup>\r\n              <div>Copy this link and send it to the voters</div>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item className=\"my-4 p-4\"><InputGroup className=\"mb-3\">\r\n                <InputGroup.Text id=\"basic-addon1\">Link for Getting Realtime vote results</InputGroup.Text>\r\n                <FormControl\r\n                  placeholder=\"Link\"\r\n                  aria-describedby=\"basic-addon1\"\r\n                  value={`${window.location.origin}/results/${match.params.id}`}\r\n                />\r\n              </InputGroup>\r\n              <Link to={`/results/${match.params.id}`} target=\"_blank\">Show Results</Link>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default InfoScreen\r\n","import io from \"socket.io-client\";\r\nlet socket = io();\r\nexport default socket;","import axios from 'axios'\r\nimport React,{ useEffect, useState } from 'react'\r\nimport { Card, Container ,ListGroup,Spinner } from 'react-bootstrap'\r\nimport socket from '../socket'\r\n\r\nconst ResultScreen = ({ match ,history}) => {\r\n\r\n    const [ loading, setLoading ]= useState(true)\r\n    const [ question, setQuestion ]= useState(\"\")\r\n    const [ options, setOptions ]= useState([])\r\n    const [ totalVotes, setTotalVotes ]= useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData=async ()=>{\r\n            const { data }= await axios.get(`/api/poll/${match.params.id}`);\r\n            setQuestion(data.question);\r\n            setOptions(data.options);\r\n            setTotalVotes(data.options.reduce((a, b) => ({count: a.count + b.count})).count);\r\n            // console.log(data)\r\n        }\r\n\r\n        fetchData();\r\n        setLoading(false);\r\n\r\n        // console.log(options)\r\n        \r\n        socket.emit('joinRoom', match.params.id);\r\n\r\n        const incrementCount=({ optionId })=> {\r\n            setOptions(prevOpt=> {\r\n                const newOption= [...prevOpt]\r\n                // console.log(newOption)\r\n                const idx= newOption.findIndex((ele)=>\r\n                {\r\n                    return ele._id===optionId\r\n                } )\r\n\r\n                if(idx!==-1)\r\n                {\r\n                    newOption[idx].count=newOption[idx].count+1; \r\n                }\r\n                // console.log(newOption)\r\n                return newOption\r\n            })\r\n\r\n            setTotalVotes((prevCount)=>{\r\n                return prevCount+1;\r\n            })\r\n        }\r\n\r\n        socket.on('increaseCountDone', incrementCount)\r\n        \r\n        return () => {\r\n            socket.off('increaseCountDone', incrementCount);\r\n        };\r\n        // eslint-disable-next-line\r\n      }, [match.params.id]);\r\n\r\n\r\n    return (\r\n        loading ?(<Container style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n            <Spinner animation=\"border\" style={{ width: '4rem', height: '4rem' }}/></Container>):(\r\n        <div>\r\n            <Container style={{ height: '100%',display: 'flex',  flexDirection: 'column', justifyContent:'center', alignItems:'center'}} className='resultContainer'>\r\n            <h2 style={{ margin: '50px' }}>{question}</h2>\r\n            <div style={{ width: '100%', display: 'flex' , flexDirection: 'row'}}>\r\n\r\n            <div style={{width: '80%'}}>\r\n            {\r\n                    options.map((opt)=>{\r\n                    return <Card key={opt._id} style={{ width: '95%'}} className='my-2'>\r\n                              <Card.Body>\r\n                                <Card.Title style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <div>{opt.value}</div> \r\n                                    <div className='badge rounded-pill bg-info'>{totalVotes?`${Math.floor((opt.count/totalVotes)*100)}%`:'0'}</div>\r\n                                </Card.Title>\r\n                                <Card.Text as=\"div\">\r\n                                <div className=\"progress\">\r\n                                  <div className=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" style={{ width: `${(opt.count/totalVotes)*100}%`}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                                </div>\r\n                                <div>{opt.count} votes</div>\r\n                                </Card.Text>\r\n                              </Card.Body>\r\n                            </Card>\r\n                    })\r\n            }\r\n            </div>\r\n            <div style={{ width: '20%' }}>\r\n            <Card className='my-2'>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>Total Votes: {totalVotes}</ListGroup.Item>\r\n                <ListGroup.Item>Share</ListGroup.Item>\r\n                <ListGroup.Item></ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n            </div>    \r\n            </div>\r\n            </Container>\r\n        </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default ResultScreen\r\n","import axios from 'axios'\r\nimport React,{ useEffect, useState } from 'react'\r\nimport { Button, Container ,Spinner } from 'react-bootstrap'\r\nimport socket from '../socket'\r\n\r\nconst VotingScreen = ({ match ,history}) => {\r\n\r\n    const [ loading, setLoading ]= useState(true)\r\n    const [ question, setQuestion ]= useState(\"\")\r\n    const [ options, setOptions ]= useState([])\r\n    const [ selectedOption, setSelectedOption ]= useState(\"\")\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData=async ()=>{\r\n            const { data }= await axios.get(`/api/poll/${match.params.id}`);\r\n            setQuestion(data.question);\r\n            setOptions(data.options);\r\n            // console.log(data)\r\n        }\r\n\r\n        fetchData();\r\n        setLoading(false);\r\n\r\n      }, [match.params.id]);\r\n\r\n      const handleOnchange=(e)=>{\r\n        //   console.log(e.target.value);\r\n        setSelectedOption(e.target.id);\r\n      }\r\n    \r\n      const handleOptionSubmit=(e)=>{\r\n          e.preventDefault();\r\n\r\n\r\n        const body={ pollId: match.params.id, optionId: selectedOption }\r\n        axios.patch('/api/poll/increase',body)\r\n        .then(function (response) {\r\n          // handle success\r\n          socket.emit('increaseCount', { pollId: match.params.id,  optionId: selectedOption})\r\n          history.push(`/results/${match.params.id}`)\r\n\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          console.log(error);\r\n        })\r\n\r\n      }\r\n\r\n    return (\r\n        loading ?(<Container style={{display: 'flex', justifyContent: 'center', marginTop: '50px'}}>\r\n            <Spinner animation=\"border\" style={{ width: '4rem', height: '4rem' }}/></Container>):(\r\n        <div>\r\n            <Container style={{ height: '50vh',width: '60%' ,display: 'flex',  flexDirection: 'column', justifyContent:'center', alignItems:'center'}}>\r\n            <h2 className=\"my-3\">{question}</h2>\r\n            <form style={{width: '100%', textAlign:'center'}} onSubmit={ handleOptionSubmit }>\r\n                {\r\n                    options.map((opt)=>{\r\n                    return <div style={{width: '100%'}} key={opt._id}><input style={{ width: '1rem', height: '1rem', marginRight:'5px'}} type=\"radio\" name=\"option\" value={`${opt.value}`} id={`${opt._id}`} onChange={handleOnchange}/>\r\n                           <label style={{width: '70%'}} htmlFor={`${opt._id}`}><div style={{width: '100%'}} className=\"btn btn-primary btn-lg px-4 my-1\">{`${opt.value}`}</div></label></div>\r\n                    })\r\n                }\r\n                <Button className=\"btn-secondary my-2\" type=\"submit\">Submit Your Vote</Button>\r\n            </form>\r\n            </Container>\r\n        </div>\r\n        )\r\n    )\r\n}\r\n\r\nexport default VotingScreen\r\n","import { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport HomeScreen from './screens/HomeScreen'\r\nimport InfoScreen from './screens/InfoScreen';\r\nimport ResultScreen from './screens/ResultScreen';\r\nimport VotingScreen from './screens/VotingScreen';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <hr style={{height: \"10px\", color: \"#A020F0\", margin: \"0\"}}/>\r\n      <Router>\r\n      <Route path=\"/\" exact component={HomeScreen}/>\r\n      <Route path=\"/vote/:id\" exact component={VotingScreen}/>\r\n      <Route path=\"/info/:id\" exact component={InfoScreen}/>\r\n      <Route path=\"/results/:id\" exact component={ResultScreen}/>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './bootstrap.min.css'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}